<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class Receive_item extends CI_Controller
{
    
        
    function __construct()
    {
        parent::__construct();
        $this->load->model('Receive_item_model');
        $this->load->library('form_validation');
    }

    public function index()
    {
        $receive_item = $this->Receive_item_model->get_all();

        $data = array(
            'receive_item_data' => $receive_item
        );

        $this->template->load('template','receive_item_list', $data);
    }

    public function read($id) 
    {
        $row = $this->Receive_item_model->get_by_id($id);
        if ($row) {
            $data = array(
		'id' => $row->id,
		'delivery_detail_id' => $row->delivery_detail_id,
		'qty_received' => $row->qty_received,
		'keterangan' => $row->keterangan,
	    );
            $this->template->load('template','receive_item_read', $data);
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('receive_item'));
        }
    }

    public function create() 
    {
        $data = array(
            'button' => 'Create',
            'action' => site_url('receive_item/create_action'),
	    'id' => set_value('id'),
	    'delivery_detail_id' => set_value('delivery_detail_id'),
	    'qty_received' => set_value('qty_received'),
	    'keterangan' => set_value('keterangan'),
	);
        $this->template->load('template','receive_item_form', $data);
    }
    
    public function create_action() 
    {
        $this->_rules();

        if ($this->form_validation->run() == FALSE) {
            $this->create();
        } else {
            $data = array(
		'delivery_detail_id' => $this->input->post('delivery_detail_id',TRUE),
		'qty_received' => $this->input->post('qty_received',TRUE),
		'keterangan' => $this->input->post('keterangan',TRUE),
	    );

            $this->Receive_item_model->insert($data);
            $this->session->set_flashdata('message', 'Create Record Success');
            redirect(site_url('receive_item'));
        }
    }
    
    public function update($id) 
    {
        $row = $this->Receive_item_model->get_by_id($id);

        if ($row) {
            $data = array(
                'button' => 'Update',
                'action' => site_url('receive_item/update_action'),
		'id' => set_value('id', $row->id),
		'delivery_detail_id' => set_value('delivery_detail_id', $row->delivery_detail_id),
		'qty_received' => set_value('qty_received', $row->qty_received),
		'keterangan' => set_value('keterangan', $row->keterangan),
	    );
            $this->template->load('template','receive_item_form', $data);
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('receive_item'));
        }
    }
    
    public function update_action() 
    {
        $this->_rules();

        if ($this->form_validation->run() == FALSE) {
            $this->update($this->input->post('id', TRUE));
        } else {
            $data = array(
		'delivery_detail_id' => $this->input->post('delivery_detail_id',TRUE),
		'qty_received' => $this->input->post('qty_received',TRUE),
		'keterangan' => $this->input->post('keterangan',TRUE),
	    );

            $this->Receive_item_model->update($this->input->post('id', TRUE), $data);
            $this->session->set_flashdata('message', 'Update Record Success');
            redirect(site_url('receive_item'));
        }
    }
    
    public function delete($id) 
    {
        $row = $this->Receive_item_model->get_by_id($id);

        if ($row) {
            $this->Receive_item_model->delete($id);
            $this->session->set_flashdata('message', 'Delete Record Success');
            redirect(site_url('receive_item'));
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('receive_item'));
        }
    }

    public function _rules() 
    {
	$this->form_validation->set_rules('delivery_detail_id', 'delivery detail id', 'trim|required');
	$this->form_validation->set_rules('qty_received', 'qty received', 'trim|required');
	$this->form_validation->set_rules('keterangan', 'keterangan', 'trim|required');

	$this->form_validation->set_rules('id', 'id', 'trim');
	$this->form_validation->set_error_delimiters('<span class="text-danger">', '</span>');
    }

}

/* End of file Receive_item.php */
/* Location: ./application/controllers/Receive_item.php */
/* Please DO NOT modify this information : */
/* Generated by Harviacode Codeigniter CRUD Generator 2020-03-30 02:52:29 */
/* http://harviacode.com */